@model BugTracker.Models.TicketViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Submit a new bug ticket</h2>
<hr />
@using (Html.BeginForm(null,null,FormMethod.Post,new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.ProjectID, "Related project/product", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ProjectID", null, "", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ProjectID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Title, "Title of ticket", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input class="form-control" type="text" name="Title" value="@ViewBag.TicketTitle" />
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, "Description of bug", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <textarea class="form-control" name="Description" >@ViewBag.Description</textarea>
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TicketTypeID, "Type of ticket", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TicketTypeID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TicketTypeID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RelatedTicketID, "(optional) Related ticket", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("RelatedTicketID", null, "", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.RelatedTicketID, "", new { @class = "text-danger" })
            </div>
        </div>


        @* Upload an attachment *@
        <div class="row">
            <p id="attachment0">
                @Html.ActionLink("Upload an attachment", "Create", "TicketAttachments", new { count = 0 }, new { @class = "btn btn-info col-md-offset-2" })
            </p>
        </div>

        @* Submit and cancel buttons *@
        <p>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-1">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
                <div class="col-md-1">
                    <a class="btn btn-danger" href="/Tickets">Cancel</a>
                </div>
            </div>
        </p>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/CreateTicket.js"></script>
}
